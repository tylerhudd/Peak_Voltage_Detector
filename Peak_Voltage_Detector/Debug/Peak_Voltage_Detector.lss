
Peak_Voltage_Detector.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  00000d32  00000da6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d32  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000dd2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e30  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aad  00000000  00000000  00000ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007dc  00000000  00000000  00001975  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000409  00000000  00000000  00002151  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  0000255c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000458  00000000  00000000  00002634  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000363  00000000  00000000  00002a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002def  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e3       	ldi	r30, 0x32	; 50
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 32       	cpi	r26, 0x2C	; 44
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 34 01 	call	0x268	; 0x268 <main>
  8e:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_cmd>:
	lcd_cmd(0xC0);				// set position
}

void lcd_cmd(char cmd_out)
{
	data=cmd_out;					// set the command across LCD data register
  96:	85 b9       	out	0x05, r24	; 5
	PORTD=(0<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive command
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	83 ec       	ldi	r24, 0xC3	; 195
  9e:	99 e0       	ldi	r25, 0x09	; 9
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_cmd+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <lcd_cmd+0x10>
  a6:	00 00       	nop
	_delay_ms(10);
	PORTD=(0<<rs)|(0<<rw)|(0<<en);	// latch last command
  a8:	1b b8       	out	0x0b, r1	; 11
  aa:	83 ec       	ldi	r24, 0xC3	; 195
  ac:	99 e0       	ldi	r25, 0x09	; 9
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <lcd_cmd+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <lcd_cmd+0x1e>
  b4:	00 00       	nop
  b6:	08 95       	ret

000000b8 <lcd_data>:
	_delay_ms(10);
}

void lcd_data(char data_out)
{
	data=data_out;					// set the data across the LCD data register	
  b8:	85 b9       	out	0x05, r24	; 5
	PORTD=(1<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive data
  ba:	85 e0       	ldi	r24, 0x05	; 5
  bc:	8b b9       	out	0x0b, r24	; 11
  be:	83 ec       	ldi	r24, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_data+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_data+0x10>
  c8:	00 00       	nop
	_delay_ms(10);
	PORTD=(1<<rs)|(0<<rw)|(0<<en);	// latch last data
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	8b b9       	out	0x0b, r24	; 11
  ce:	83 ec       	ldi	r24, 0xC3	; 195
  d0:	99 e0       	ldi	r25, 0x09	; 9
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_data+0x1a>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_data+0x20>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <lcd_str>:
	_delay_ms(10);
}

void lcd_str(char *str)
{
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	ec 01       	movw	r28, r24
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
  e2:	88 81       	ld	r24, Y
  e4:	88 23       	and	r24, r24
  e6:	31 f0       	breq	.+12     	; 0xf4 <lcd_str+0x18>
  e8:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_data(str[i]);
  ea:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_data>
}

void lcd_str(char *str)
{
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
  ee:	89 91       	ld	r24, Y+
  f0:	81 11       	cpse	r24, r1
  f2:	fb cf       	rjmp	.-10     	; 0xea <lcd_str+0xe>
	{
		lcd_data(str[i]);
		i++;
	}
}
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <lcd_init>:
	}
}

void lcd_init()
{
	lcd_cmd(0X38);				// initialize 2 lines, 5x7 font for 16x2 LCD
  fa:	88 e3       	ldi	r24, 0x38	; 56
  fc:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X0C);				// display on, cursor off
 100:	8c e0       	ldi	r24, 0x0C	; 12
 102:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X01);				// clear screen
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X83);				// set position
 10c:	83 e8       	ldi	r24, 0x83	; 131
 10e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_str("Voltmeter");
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_str>
	lcd_cmd(0xC0);				// set position
 11a:	80 ec       	ldi	r24, 0xC0	; 192
 11c:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
 120:	08 95       	ret

00000122 <adc_init>:
	}
}

void adc_init()
{
	ADMUX = (1<<REFS0);	// Aref = Vcc
 122:	80 e4       	ldi	r24, 0x40	; 64
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	
	/* the ADC needs a clock signal between 50kHz and 200kHz, with internal 8MHz clock,
	   a prescaler of 64 gives the ADC a clock of 125kHz */
	
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADEN);	// enable ADC, set prescaler to 64
 128:	86 e8       	ldi	r24, 0x86	; 134
 12a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 12e:	08 95       	ret

00000130 <read_adc>:
}

uint16_t read_adc(uint8_t channel)
{
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);	// select ADC channel
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	90 81       	ld	r25, Z
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	90 7f       	andi	r25, 0xF0	; 240
 13a:	89 2b       	or	r24, r25
 13c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);						// select single conversion mode
 13e:	ea e7       	ldi	r30, 0x7A	; 122
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	80 64       	ori	r24, 0x40	; 64
 146:	80 83       	st	Z, r24
	while( ADCSRA & (1<<ADSC) );				// wait until ADC conversion is complete
 148:	80 81       	ld	r24, Z
 14a:	86 fd       	sbrc	r24, 6
 14c:	fd cf       	rjmp	.-6      	; 0x148 <read_adc+0x18>
	return ADC;
 14e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 152:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 156:	08 95       	ret

00000158 <print_volt>:

void print_volt(float voltage)
{
 158:	8f 92       	push	r8
 15a:	9f 92       	push	r9
 15c:	af 92       	push	r10
 15e:	bf 92       	push	r11
 160:	cf 92       	push	r12
 162:	df 92       	push	r13
 164:	ef 92       	push	r14
 166:	ff 92       	push	r15
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	60 97       	sbiw	r28, 0x10	; 16
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	f8 94       	cli
 176:	de bf       	out	0x3e, r29	; 62
 178:	0f be       	out	0x3f, r0	; 63
 17a:	cd bf       	out	0x3d, r28	; 61
 17c:	4b 01       	movw	r8, r22
 17e:	5c 01       	movw	r10, r24
	int intV;
	float diffV;
	int decV;
	char number[16];	// character array for converting doubles to string
	
	lcd_init();
 180:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
	intV = (int) voltage;
 184:	c5 01       	movw	r24, r10
 186:	b4 01       	movw	r22, r8
 188:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__fixsfsi>
 18c:	6b 01       	movw	r12, r22
 18e:	7c 01       	movw	r14, r24
	diffV = voltage - (float)intV;
 190:	07 2e       	mov	r0, r23
 192:	00 0c       	add	r0, r0
 194:	88 0b       	sbc	r24, r24
 196:	99 0b       	sbc	r25, r25
 198:	0e 94 a2 02 	call	0x544	; 0x544 <__floatsisf>
 19c:	9b 01       	movw	r18, r22
 19e:	ac 01       	movw	r20, r24
 1a0:	c5 01       	movw	r24, r10
 1a2:	b4 01       	movw	r22, r8
 1a4:	0e 94 86 01 	call	0x30c	; 0x30c <__subsf3>
	decV = (int) (diffV*1000);
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	4a e7       	ldi	r20, 0x7A	; 122
 1ae:	54 e4       	ldi	r21, 0x44	; 68
 1b0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__mulsf3>
 1b4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__fixsfsi>
 1b8:	86 2f       	mov	r24, r22
 1ba:	97 2f       	mov	r25, r23
	
	if(decV < 10){
 1bc:	8a 30       	cpi	r24, 0x0A	; 10
 1be:	91 05       	cpc	r25, r1
 1c0:	a4 f4       	brge	.+40     	; 0x1ea <print_volt+0x92>
		sprintf(number, "%u.00%u V", intV, decV);		// convert voltage to string
 1c2:	7f 93       	push	r23
 1c4:	6f 93       	push	r22
 1c6:	df 92       	push	r13
 1c8:	cf 92       	push	r12
 1ca:	8a e0       	ldi	r24, 0x0A	; 10
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	9f 93       	push	r25
 1d0:	8f 93       	push	r24
 1d2:	ce 01       	movw	r24, r28
 1d4:	01 96       	adiw	r24, 0x01	; 1
 1d6:	9f 93       	push	r25
 1d8:	8f 93       	push	r24
 1da:	0e 94 bf 03 	call	0x77e	; 0x77e <sprintf>
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
 1e8:	2a c0       	rjmp	.+84     	; 0x23e <print_volt+0xe6>
	}
	else if(decV < 100){
 1ea:	84 36       	cpi	r24, 0x64	; 100
 1ec:	91 05       	cpc	r25, r1
 1ee:	a4 f4       	brge	.+40     	; 0x218 <print_volt+0xc0>
		sprintf(number, "%u.0%u V", intV, decV);		// convert voltage to string
 1f0:	7f 93       	push	r23
 1f2:	6f 93       	push	r22
 1f4:	df 92       	push	r13
 1f6:	cf 92       	push	r12
 1f8:	84 e1       	ldi	r24, 0x14	; 20
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	9f 93       	push	r25
 1fe:	8f 93       	push	r24
 200:	ce 01       	movw	r24, r28
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	9f 93       	push	r25
 206:	8f 93       	push	r24
 208:	0e 94 bf 03 	call	0x77e	; 0x77e <sprintf>
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	f8 94       	cli
 210:	de bf       	out	0x3e, r29	; 62
 212:	0f be       	out	0x3f, r0	; 63
 214:	cd bf       	out	0x3d, r28	; 61
 216:	13 c0       	rjmp	.+38     	; 0x23e <print_volt+0xe6>
	}
	else sprintf(number, "%u.%u V", intV, decV);		// convert voltage to string
 218:	7f 93       	push	r23
 21a:	6f 93       	push	r22
 21c:	df 92       	push	r13
 21e:	cf 92       	push	r12
 220:	8d e1       	ldi	r24, 0x1D	; 29
 222:	91 e0       	ldi	r25, 0x01	; 1
 224:	9f 93       	push	r25
 226:	8f 93       	push	r24
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	9f 93       	push	r25
 22e:	8f 93       	push	r24
 230:	0e 94 bf 03 	call	0x77e	; 0x77e <sprintf>
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	de bf       	out	0x3e, r29	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	cd bf       	out	0x3d, r28	; 61
	
	lcd_str(number);									// print voltage
 23e:	ce 01       	movw	r24, r28
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_str>
 246:	60 96       	adiw	r28, 0x10	; 16
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	f8 94       	cli
 24c:	de bf       	out	0x3e, r29	; 62
 24e:	0f be       	out	0x3f, r0	; 63
 250:	cd bf       	out	0x3d, r28	; 61
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	ff 90       	pop	r15
 258:	ef 90       	pop	r14
 25a:	df 90       	pop	r13
 25c:	cf 90       	pop	r12
 25e:	bf 90       	pop	r11
 260:	af 90       	pop	r10
 262:	9f 90       	pop	r9
 264:	8f 90       	pop	r8
 266:	08 95       	ret

00000268 <main>:
int main()
{
	float voltage;
	float peak = 0.0;
	
	DDRB=0XFF;			// Port B: data register for LCD - set to output
 268:	8f ef       	ldi	r24, 0xFF	; 255
 26a:	84 b9       	out	0x04, r24	; 4
	DDRD=0XF7;			// Port D: PD0 is input, the rest is output for LCD command register
 26c:	87 ef       	ldi	r24, 0xF7	; 247
 26e:	8a b9       	out	0x0a, r24	; 10
	//PIND=0x00;
	
	adc_init();
 270:	0e 94 91 00 	call	0x122	; 0x122 <adc_init>
void print_volt(float voltage);			// print the voltage to the LCD

int main()
{
	float voltage;
	float peak = 0.0;
 274:	a1 2c       	mov	r10, r1
 276:	b1 2c       	mov	r11, r1
 278:	c1 2c       	mov	r12, r1
 27a:	d1 2c       	mov	r13, r1
	{
		if((PIND & 0x08) == 0x08)
		{
			lcd_init();
			lcd_str("Ready");
			peak = 0.0;
 27c:	e1 2c       	mov	r14, r1
 27e:	f1 2c       	mov	r15, r1
 280:	91 2c       	mov	r9, r1
 282:	81 2c       	mov	r8, r1
	
	adc_init();
	
	while(1)
	{
		if((PIND & 0x08) == 0x08)
 284:	4b 9b       	sbis	0x09, 3	; 9
 286:	13 c0       	rjmp	.+38     	; 0x2ae <main+0x46>
		{
			lcd_init();
 288:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			lcd_str("Ready");
 28c:	85 e2       	ldi	r24, 0x25	; 37
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_str>
 294:	2f e3       	ldi	r18, 0x3F	; 63
 296:	8d e0       	ldi	r24, 0x0D	; 13
 298:	93 e0       	ldi	r25, 0x03	; 3
 29a:	21 50       	subi	r18, 0x01	; 1
 29c:	80 40       	sbci	r24, 0x00	; 0
 29e:	90 40       	sbci	r25, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0x32>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <main+0x3c>
 2a4:	00 00       	nop
			peak = 0.0;
 2a6:	ae 2c       	mov	r10, r14
 2a8:	bf 2c       	mov	r11, r15
 2aa:	c9 2c       	mov	r12, r9
 2ac:	d8 2c       	mov	r13, r8
			_delay_ms(1000);
		}
		voltage = (float)(read_adc(7)*5.0/1023.0);	// read ADC channel 7 and calculate voltage
 2ae:	87 e0       	ldi	r24, 0x07	; 7
 2b0:	0e 94 98 00 	call	0x130	; 0x130 <read_adc>
 2b4:	bc 01       	movw	r22, r24
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	0e 94 a0 02 	call	0x540	; 0x540 <__floatunsisf>
 2be:	20 e0       	ldi	r18, 0x00	; 0
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	40 ea       	ldi	r20, 0xA0	; 160
 2c4:	50 e4       	ldi	r21, 0x40	; 64
 2c6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__mulsf3>
 2ca:	20 e0       	ldi	r18, 0x00	; 0
 2cc:	30 ec       	ldi	r19, 0xC0	; 192
 2ce:	4f e7       	ldi	r20, 0x7F	; 127
 2d0:	54 e4       	ldi	r21, 0x44	; 68
 2d2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__divsf3>
 2d6:	06 2f       	mov	r16, r22
 2d8:	17 2f       	mov	r17, r23
 2da:	d8 2f       	mov	r29, r24
 2dc:	c9 2f       	mov	r28, r25
		if(voltage > peak)
 2de:	26 2f       	mov	r18, r22
 2e0:	37 2f       	mov	r19, r23
 2e2:	48 2f       	mov	r20, r24
 2e4:	59 2f       	mov	r21, r25
 2e6:	6a 2d       	mov	r22, r10
 2e8:	7b 2d       	mov	r23, r11
 2ea:	8c 2d       	mov	r24, r12
 2ec:	9d 2d       	mov	r25, r13
 2ee:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__cmpsf2>
 2f2:	88 23       	and	r24, r24
 2f4:	3c f6       	brge	.-114    	; 0x284 <main+0x1c>
		{
			peak = voltage;
			print_volt(voltage);
 2f6:	60 2f       	mov	r22, r16
 2f8:	71 2f       	mov	r23, r17
 2fa:	8d 2f       	mov	r24, r29
 2fc:	9c 2f       	mov	r25, r28
 2fe:	0e 94 ac 00 	call	0x158	; 0x158 <print_volt>
			lcd_init();
			lcd_str("Ready");
			peak = 0.0;
			_delay_ms(1000);
		}
		voltage = (float)(read_adc(7)*5.0/1023.0);	// read ADC channel 7 and calculate voltage
 302:	a0 2e       	mov	r10, r16
 304:	b1 2e       	mov	r11, r17
 306:	cd 2e       	mov	r12, r29
 308:	dc 2e       	mov	r13, r28
 30a:	bc cf       	rjmp	.-136    	; 0x284 <main+0x1c>

0000030c <__subsf3>:
 30c:	50 58       	subi	r21, 0x80	; 128

0000030e <__addsf3>:
 30e:	bb 27       	eor	r27, r27
 310:	aa 27       	eor	r26, r26
 312:	0e 94 9e 01 	call	0x33c	; 0x33c <__addsf3x>
 316:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_round>
 31a:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscA>
 31e:	38 f0       	brcs	.+14     	; 0x32e <__addsf3+0x20>
 320:	0e 94 11 03 	call	0x622	; 0x622 <__fp_pscB>
 324:	20 f0       	brcs	.+8      	; 0x32e <__addsf3+0x20>
 326:	39 f4       	brne	.+14     	; 0x336 <__addsf3+0x28>
 328:	9f 3f       	cpi	r25, 0xFF	; 255
 32a:	19 f4       	brne	.+6      	; 0x332 <__addsf3+0x24>
 32c:	26 f4       	brtc	.+8      	; 0x336 <__addsf3+0x28>
 32e:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_nan>
 332:	0e f4       	brtc	.+2      	; 0x336 <__addsf3+0x28>
 334:	e0 95       	com	r30
 336:	e7 fb       	bst	r30, 7
 338:	0c 94 01 03 	jmp	0x602	; 0x602 <__fp_inf>

0000033c <__addsf3x>:
 33c:	e9 2f       	mov	r30, r25
 33e:	0e 94 29 03 	call	0x652	; 0x652 <__fp_split3>
 342:	58 f3       	brcs	.-42     	; 0x31a <__addsf3+0xc>
 344:	ba 17       	cp	r27, r26
 346:	62 07       	cpc	r22, r18
 348:	73 07       	cpc	r23, r19
 34a:	84 07       	cpc	r24, r20
 34c:	95 07       	cpc	r25, r21
 34e:	20 f0       	brcs	.+8      	; 0x358 <__addsf3x+0x1c>
 350:	79 f4       	brne	.+30     	; 0x370 <__addsf3x+0x34>
 352:	a6 f5       	brtc	.+104    	; 0x3bc <__addsf3x+0x80>
 354:	0c 94 4b 03 	jmp	0x696	; 0x696 <__fp_zero>
 358:	0e f4       	brtc	.+2      	; 0x35c <__addsf3x+0x20>
 35a:	e0 95       	com	r30
 35c:	0b 2e       	mov	r0, r27
 35e:	ba 2f       	mov	r27, r26
 360:	a0 2d       	mov	r26, r0
 362:	0b 01       	movw	r0, r22
 364:	b9 01       	movw	r22, r18
 366:	90 01       	movw	r18, r0
 368:	0c 01       	movw	r0, r24
 36a:	ca 01       	movw	r24, r20
 36c:	a0 01       	movw	r20, r0
 36e:	11 24       	eor	r1, r1
 370:	ff 27       	eor	r31, r31
 372:	59 1b       	sub	r21, r25
 374:	99 f0       	breq	.+38     	; 0x39c <__addsf3x+0x60>
 376:	59 3f       	cpi	r21, 0xF9	; 249
 378:	50 f4       	brcc	.+20     	; 0x38e <__addsf3x+0x52>
 37a:	50 3e       	cpi	r21, 0xE0	; 224
 37c:	68 f1       	brcs	.+90     	; 0x3d8 <__addsf3x+0x9c>
 37e:	1a 16       	cp	r1, r26
 380:	f0 40       	sbci	r31, 0x00	; 0
 382:	a2 2f       	mov	r26, r18
 384:	23 2f       	mov	r18, r19
 386:	34 2f       	mov	r19, r20
 388:	44 27       	eor	r20, r20
 38a:	58 5f       	subi	r21, 0xF8	; 248
 38c:	f3 cf       	rjmp	.-26     	; 0x374 <__addsf3x+0x38>
 38e:	46 95       	lsr	r20
 390:	37 95       	ror	r19
 392:	27 95       	ror	r18
 394:	a7 95       	ror	r26
 396:	f0 40       	sbci	r31, 0x00	; 0
 398:	53 95       	inc	r21
 39a:	c9 f7       	brne	.-14     	; 0x38e <__addsf3x+0x52>
 39c:	7e f4       	brtc	.+30     	; 0x3bc <__addsf3x+0x80>
 39e:	1f 16       	cp	r1, r31
 3a0:	ba 0b       	sbc	r27, r26
 3a2:	62 0b       	sbc	r22, r18
 3a4:	73 0b       	sbc	r23, r19
 3a6:	84 0b       	sbc	r24, r20
 3a8:	ba f0       	brmi	.+46     	; 0x3d8 <__addsf3x+0x9c>
 3aa:	91 50       	subi	r25, 0x01	; 1
 3ac:	a1 f0       	breq	.+40     	; 0x3d6 <__addsf3x+0x9a>
 3ae:	ff 0f       	add	r31, r31
 3b0:	bb 1f       	adc	r27, r27
 3b2:	66 1f       	adc	r22, r22
 3b4:	77 1f       	adc	r23, r23
 3b6:	88 1f       	adc	r24, r24
 3b8:	c2 f7       	brpl	.-16     	; 0x3aa <__addsf3x+0x6e>
 3ba:	0e c0       	rjmp	.+28     	; 0x3d8 <__addsf3x+0x9c>
 3bc:	ba 0f       	add	r27, r26
 3be:	62 1f       	adc	r22, r18
 3c0:	73 1f       	adc	r23, r19
 3c2:	84 1f       	adc	r24, r20
 3c4:	48 f4       	brcc	.+18     	; 0x3d8 <__addsf3x+0x9c>
 3c6:	87 95       	ror	r24
 3c8:	77 95       	ror	r23
 3ca:	67 95       	ror	r22
 3cc:	b7 95       	ror	r27
 3ce:	f7 95       	ror	r31
 3d0:	9e 3f       	cpi	r25, 0xFE	; 254
 3d2:	08 f0       	brcs	.+2      	; 0x3d6 <__addsf3x+0x9a>
 3d4:	b0 cf       	rjmp	.-160    	; 0x336 <__addsf3+0x28>
 3d6:	93 95       	inc	r25
 3d8:	88 0f       	add	r24, r24
 3da:	08 f0       	brcs	.+2      	; 0x3de <__addsf3x+0xa2>
 3dc:	99 27       	eor	r25, r25
 3de:	ee 0f       	add	r30, r30
 3e0:	97 95       	ror	r25
 3e2:	87 95       	ror	r24
 3e4:	08 95       	ret

000003e6 <__cmpsf2>:
 3e6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__fp_cmp>
 3ea:	08 f4       	brcc	.+2      	; 0x3ee <__cmpsf2+0x8>
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	08 95       	ret

000003f0 <__divsf3>:
 3f0:	0e 94 0c 02 	call	0x418	; 0x418 <__divsf3x>
 3f4:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_round>
 3f8:	0e 94 11 03 	call	0x622	; 0x622 <__fp_pscB>
 3fc:	58 f0       	brcs	.+22     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3fe:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscA>
 402:	40 f0       	brcs	.+16     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 404:	29 f4       	brne	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	5f 3f       	cpi	r21, 0xFF	; 255
 408:	29 f0       	breq	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40a:	0c 94 01 03 	jmp	0x602	; 0x602 <__fp_inf>
 40e:	51 11       	cpse	r21, r1
 410:	0c 94 4c 03 	jmp	0x698	; 0x698 <__fp_szero>
 414:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_nan>

00000418 <__divsf3x>:
 418:	0e 94 29 03 	call	0x652	; 0x652 <__fp_split3>
 41c:	68 f3       	brcs	.-38     	; 0x3f8 <__divsf3+0x8>

0000041e <__divsf3_pse>:
 41e:	99 23       	and	r25, r25
 420:	b1 f3       	breq	.-20     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 422:	55 23       	and	r21, r21
 424:	91 f3       	breq	.-28     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 426:	95 1b       	sub	r25, r21
 428:	55 0b       	sbc	r21, r21
 42a:	bb 27       	eor	r27, r27
 42c:	aa 27       	eor	r26, r26
 42e:	62 17       	cp	r22, r18
 430:	73 07       	cpc	r23, r19
 432:	84 07       	cpc	r24, r20
 434:	38 f0       	brcs	.+14     	; 0x444 <__divsf3_pse+0x26>
 436:	9f 5f       	subi	r25, 0xFF	; 255
 438:	5f 4f       	sbci	r21, 0xFF	; 255
 43a:	22 0f       	add	r18, r18
 43c:	33 1f       	adc	r19, r19
 43e:	44 1f       	adc	r20, r20
 440:	aa 1f       	adc	r26, r26
 442:	a9 f3       	breq	.-22     	; 0x42e <__divsf3_pse+0x10>
 444:	35 d0       	rcall	.+106    	; 0x4b0 <__divsf3_pse+0x92>
 446:	0e 2e       	mov	r0, r30
 448:	3a f0       	brmi	.+14     	; 0x458 <__divsf3_pse+0x3a>
 44a:	e0 e8       	ldi	r30, 0x80	; 128
 44c:	32 d0       	rcall	.+100    	; 0x4b2 <__divsf3_pse+0x94>
 44e:	91 50       	subi	r25, 0x01	; 1
 450:	50 40       	sbci	r21, 0x00	; 0
 452:	e6 95       	lsr	r30
 454:	00 1c       	adc	r0, r0
 456:	ca f7       	brpl	.-14     	; 0x44a <__divsf3_pse+0x2c>
 458:	2b d0       	rcall	.+86     	; 0x4b0 <__divsf3_pse+0x92>
 45a:	fe 2f       	mov	r31, r30
 45c:	29 d0       	rcall	.+82     	; 0x4b0 <__divsf3_pse+0x92>
 45e:	66 0f       	add	r22, r22
 460:	77 1f       	adc	r23, r23
 462:	88 1f       	adc	r24, r24
 464:	bb 1f       	adc	r27, r27
 466:	26 17       	cp	r18, r22
 468:	37 07       	cpc	r19, r23
 46a:	48 07       	cpc	r20, r24
 46c:	ab 07       	cpc	r26, r27
 46e:	b0 e8       	ldi	r27, 0x80	; 128
 470:	09 f0       	breq	.+2      	; 0x474 <__divsf3_pse+0x56>
 472:	bb 0b       	sbc	r27, r27
 474:	80 2d       	mov	r24, r0
 476:	bf 01       	movw	r22, r30
 478:	ff 27       	eor	r31, r31
 47a:	93 58       	subi	r25, 0x83	; 131
 47c:	5f 4f       	sbci	r21, 0xFF	; 255
 47e:	3a f0       	brmi	.+14     	; 0x48e <__divsf3_pse+0x70>
 480:	9e 3f       	cpi	r25, 0xFE	; 254
 482:	51 05       	cpc	r21, r1
 484:	78 f0       	brcs	.+30     	; 0x4a4 <__divsf3_pse+0x86>
 486:	0c 94 01 03 	jmp	0x602	; 0x602 <__fp_inf>
 48a:	0c 94 4c 03 	jmp	0x698	; 0x698 <__fp_szero>
 48e:	5f 3f       	cpi	r21, 0xFF	; 255
 490:	e4 f3       	brlt	.-8      	; 0x48a <__divsf3_pse+0x6c>
 492:	98 3e       	cpi	r25, 0xE8	; 232
 494:	d4 f3       	brlt	.-12     	; 0x48a <__divsf3_pse+0x6c>
 496:	86 95       	lsr	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f7 95       	ror	r31
 4a0:	9f 5f       	subi	r25, 0xFF	; 255
 4a2:	c9 f7       	brne	.-14     	; 0x496 <__divsf3_pse+0x78>
 4a4:	88 0f       	add	r24, r24
 4a6:	91 1d       	adc	r25, r1
 4a8:	96 95       	lsr	r25
 4aa:	87 95       	ror	r24
 4ac:	97 f9       	bld	r25, 7
 4ae:	08 95       	ret
 4b0:	e1 e0       	ldi	r30, 0x01	; 1
 4b2:	66 0f       	add	r22, r22
 4b4:	77 1f       	adc	r23, r23
 4b6:	88 1f       	adc	r24, r24
 4b8:	bb 1f       	adc	r27, r27
 4ba:	62 17       	cp	r22, r18
 4bc:	73 07       	cpc	r23, r19
 4be:	84 07       	cpc	r24, r20
 4c0:	ba 07       	cpc	r27, r26
 4c2:	20 f0       	brcs	.+8      	; 0x4cc <__divsf3_pse+0xae>
 4c4:	62 1b       	sub	r22, r18
 4c6:	73 0b       	sbc	r23, r19
 4c8:	84 0b       	sbc	r24, r20
 4ca:	ba 0b       	sbc	r27, r26
 4cc:	ee 1f       	adc	r30, r30
 4ce:	88 f7       	brcc	.-30     	; 0x4b2 <__divsf3_pse+0x94>
 4d0:	e0 95       	com	r30
 4d2:	08 95       	ret

000004d4 <__fixsfsi>:
 4d4:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fixunssfsi>
 4d8:	68 94       	set
 4da:	b1 11       	cpse	r27, r1
 4dc:	0c 94 4c 03 	jmp	0x698	; 0x698 <__fp_szero>
 4e0:	08 95       	ret

000004e2 <__fixunssfsi>:
 4e2:	0e 94 31 03 	call	0x662	; 0x662 <__fp_splitA>
 4e6:	88 f0       	brcs	.+34     	; 0x50a <__fixunssfsi+0x28>
 4e8:	9f 57       	subi	r25, 0x7F	; 127
 4ea:	98 f0       	brcs	.+38     	; 0x512 <__fixunssfsi+0x30>
 4ec:	b9 2f       	mov	r27, r25
 4ee:	99 27       	eor	r25, r25
 4f0:	b7 51       	subi	r27, 0x17	; 23
 4f2:	b0 f0       	brcs	.+44     	; 0x520 <__fixunssfsi+0x3e>
 4f4:	e1 f0       	breq	.+56     	; 0x52e <__fixunssfsi+0x4c>
 4f6:	66 0f       	add	r22, r22
 4f8:	77 1f       	adc	r23, r23
 4fa:	88 1f       	adc	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	1a f0       	brmi	.+6      	; 0x506 <__fixunssfsi+0x24>
 500:	ba 95       	dec	r27
 502:	c9 f7       	brne	.-14     	; 0x4f6 <__fixunssfsi+0x14>
 504:	14 c0       	rjmp	.+40     	; 0x52e <__fixunssfsi+0x4c>
 506:	b1 30       	cpi	r27, 0x01	; 1
 508:	91 f0       	breq	.+36     	; 0x52e <__fixunssfsi+0x4c>
 50a:	0e 94 4b 03 	call	0x696	; 0x696 <__fp_zero>
 50e:	b1 e0       	ldi	r27, 0x01	; 1
 510:	08 95       	ret
 512:	0c 94 4b 03 	jmp	0x696	; 0x696 <__fp_zero>
 516:	67 2f       	mov	r22, r23
 518:	78 2f       	mov	r23, r24
 51a:	88 27       	eor	r24, r24
 51c:	b8 5f       	subi	r27, 0xF8	; 248
 51e:	39 f0       	breq	.+14     	; 0x52e <__fixunssfsi+0x4c>
 520:	b9 3f       	cpi	r27, 0xF9	; 249
 522:	cc f3       	brlt	.-14     	; 0x516 <__fixunssfsi+0x34>
 524:	86 95       	lsr	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b3 95       	inc	r27
 52c:	d9 f7       	brne	.-10     	; 0x524 <__fixunssfsi+0x42>
 52e:	3e f4       	brtc	.+14     	; 0x53e <__fixunssfsi+0x5c>
 530:	90 95       	com	r25
 532:	80 95       	com	r24
 534:	70 95       	com	r23
 536:	61 95       	neg	r22
 538:	7f 4f       	sbci	r23, 0xFF	; 255
 53a:	8f 4f       	sbci	r24, 0xFF	; 255
 53c:	9f 4f       	sbci	r25, 0xFF	; 255
 53e:	08 95       	ret

00000540 <__floatunsisf>:
 540:	e8 94       	clt
 542:	09 c0       	rjmp	.+18     	; 0x556 <__floatsisf+0x12>

00000544 <__floatsisf>:
 544:	97 fb       	bst	r25, 7
 546:	3e f4       	brtc	.+14     	; 0x556 <__floatsisf+0x12>
 548:	90 95       	com	r25
 54a:	80 95       	com	r24
 54c:	70 95       	com	r23
 54e:	61 95       	neg	r22
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	99 23       	and	r25, r25
 558:	a9 f0       	breq	.+42     	; 0x584 <__floatsisf+0x40>
 55a:	f9 2f       	mov	r31, r25
 55c:	96 e9       	ldi	r25, 0x96	; 150
 55e:	bb 27       	eor	r27, r27
 560:	93 95       	inc	r25
 562:	f6 95       	lsr	r31
 564:	87 95       	ror	r24
 566:	77 95       	ror	r23
 568:	67 95       	ror	r22
 56a:	b7 95       	ror	r27
 56c:	f1 11       	cpse	r31, r1
 56e:	f8 cf       	rjmp	.-16     	; 0x560 <__floatsisf+0x1c>
 570:	fa f4       	brpl	.+62     	; 0x5b0 <__floatsisf+0x6c>
 572:	bb 0f       	add	r27, r27
 574:	11 f4       	brne	.+4      	; 0x57a <__floatsisf+0x36>
 576:	60 ff       	sbrs	r22, 0
 578:	1b c0       	rjmp	.+54     	; 0x5b0 <__floatsisf+0x6c>
 57a:	6f 5f       	subi	r22, 0xFF	; 255
 57c:	7f 4f       	sbci	r23, 0xFF	; 255
 57e:	8f 4f       	sbci	r24, 0xFF	; 255
 580:	9f 4f       	sbci	r25, 0xFF	; 255
 582:	16 c0       	rjmp	.+44     	; 0x5b0 <__floatsisf+0x6c>
 584:	88 23       	and	r24, r24
 586:	11 f0       	breq	.+4      	; 0x58c <__floatsisf+0x48>
 588:	96 e9       	ldi	r25, 0x96	; 150
 58a:	11 c0       	rjmp	.+34     	; 0x5ae <__floatsisf+0x6a>
 58c:	77 23       	and	r23, r23
 58e:	21 f0       	breq	.+8      	; 0x598 <__floatsisf+0x54>
 590:	9e e8       	ldi	r25, 0x8E	; 142
 592:	87 2f       	mov	r24, r23
 594:	76 2f       	mov	r23, r22
 596:	05 c0       	rjmp	.+10     	; 0x5a2 <__floatsisf+0x5e>
 598:	66 23       	and	r22, r22
 59a:	71 f0       	breq	.+28     	; 0x5b8 <__floatsisf+0x74>
 59c:	96 e8       	ldi	r25, 0x86	; 134
 59e:	86 2f       	mov	r24, r22
 5a0:	70 e0       	ldi	r23, 0x00	; 0
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	2a f0       	brmi	.+10     	; 0x5b0 <__floatsisf+0x6c>
 5a6:	9a 95       	dec	r25
 5a8:	66 0f       	add	r22, r22
 5aa:	77 1f       	adc	r23, r23
 5ac:	88 1f       	adc	r24, r24
 5ae:	da f7       	brpl	.-10     	; 0x5a6 <__floatsisf+0x62>
 5b0:	88 0f       	add	r24, r24
 5b2:	96 95       	lsr	r25
 5b4:	87 95       	ror	r24
 5b6:	97 f9       	bld	r25, 7
 5b8:	08 95       	ret

000005ba <__fp_cmp>:
 5ba:	99 0f       	add	r25, r25
 5bc:	00 08       	sbc	r0, r0
 5be:	55 0f       	add	r21, r21
 5c0:	aa 0b       	sbc	r26, r26
 5c2:	e0 e8       	ldi	r30, 0x80	; 128
 5c4:	fe ef       	ldi	r31, 0xFE	; 254
 5c6:	16 16       	cp	r1, r22
 5c8:	17 06       	cpc	r1, r23
 5ca:	e8 07       	cpc	r30, r24
 5cc:	f9 07       	cpc	r31, r25
 5ce:	c0 f0       	brcs	.+48     	; 0x600 <__fp_cmp+0x46>
 5d0:	12 16       	cp	r1, r18
 5d2:	13 06       	cpc	r1, r19
 5d4:	e4 07       	cpc	r30, r20
 5d6:	f5 07       	cpc	r31, r21
 5d8:	98 f0       	brcs	.+38     	; 0x600 <__fp_cmp+0x46>
 5da:	62 1b       	sub	r22, r18
 5dc:	73 0b       	sbc	r23, r19
 5de:	84 0b       	sbc	r24, r20
 5e0:	95 0b       	sbc	r25, r21
 5e2:	39 f4       	brne	.+14     	; 0x5f2 <__fp_cmp+0x38>
 5e4:	0a 26       	eor	r0, r26
 5e6:	61 f0       	breq	.+24     	; 0x600 <__fp_cmp+0x46>
 5e8:	23 2b       	or	r18, r19
 5ea:	24 2b       	or	r18, r20
 5ec:	25 2b       	or	r18, r21
 5ee:	21 f4       	brne	.+8      	; 0x5f8 <__fp_cmp+0x3e>
 5f0:	08 95       	ret
 5f2:	0a 26       	eor	r0, r26
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <__fp_cmp+0x3e>
 5f6:	a1 40       	sbci	r26, 0x01	; 1
 5f8:	a6 95       	lsr	r26
 5fa:	8f ef       	ldi	r24, 0xFF	; 255
 5fc:	81 1d       	adc	r24, r1
 5fe:	81 1d       	adc	r24, r1
 600:	08 95       	ret

00000602 <__fp_inf>:
 602:	97 f9       	bld	r25, 7
 604:	9f 67       	ori	r25, 0x7F	; 127
 606:	80 e8       	ldi	r24, 0x80	; 128
 608:	70 e0       	ldi	r23, 0x00	; 0
 60a:	60 e0       	ldi	r22, 0x00	; 0
 60c:	08 95       	ret

0000060e <__fp_nan>:
 60e:	9f ef       	ldi	r25, 0xFF	; 255
 610:	80 ec       	ldi	r24, 0xC0	; 192
 612:	08 95       	ret

00000614 <__fp_pscA>:
 614:	00 24       	eor	r0, r0
 616:	0a 94       	dec	r0
 618:	16 16       	cp	r1, r22
 61a:	17 06       	cpc	r1, r23
 61c:	18 06       	cpc	r1, r24
 61e:	09 06       	cpc	r0, r25
 620:	08 95       	ret

00000622 <__fp_pscB>:
 622:	00 24       	eor	r0, r0
 624:	0a 94       	dec	r0
 626:	12 16       	cp	r1, r18
 628:	13 06       	cpc	r1, r19
 62a:	14 06       	cpc	r1, r20
 62c:	05 06       	cpc	r0, r21
 62e:	08 95       	ret

00000630 <__fp_round>:
 630:	09 2e       	mov	r0, r25
 632:	03 94       	inc	r0
 634:	00 0c       	add	r0, r0
 636:	11 f4       	brne	.+4      	; 0x63c <__fp_round+0xc>
 638:	88 23       	and	r24, r24
 63a:	52 f0       	brmi	.+20     	; 0x650 <__fp_round+0x20>
 63c:	bb 0f       	add	r27, r27
 63e:	40 f4       	brcc	.+16     	; 0x650 <__fp_round+0x20>
 640:	bf 2b       	or	r27, r31
 642:	11 f4       	brne	.+4      	; 0x648 <__fp_round+0x18>
 644:	60 ff       	sbrs	r22, 0
 646:	04 c0       	rjmp	.+8      	; 0x650 <__fp_round+0x20>
 648:	6f 5f       	subi	r22, 0xFF	; 255
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	08 95       	ret

00000652 <__fp_split3>:
 652:	57 fd       	sbrc	r21, 7
 654:	90 58       	subi	r25, 0x80	; 128
 656:	44 0f       	add	r20, r20
 658:	55 1f       	adc	r21, r21
 65a:	59 f0       	breq	.+22     	; 0x672 <__fp_splitA+0x10>
 65c:	5f 3f       	cpi	r21, 0xFF	; 255
 65e:	71 f0       	breq	.+28     	; 0x67c <__fp_splitA+0x1a>
 660:	47 95       	ror	r20

00000662 <__fp_splitA>:
 662:	88 0f       	add	r24, r24
 664:	97 fb       	bst	r25, 7
 666:	99 1f       	adc	r25, r25
 668:	61 f0       	breq	.+24     	; 0x682 <__fp_splitA+0x20>
 66a:	9f 3f       	cpi	r25, 0xFF	; 255
 66c:	79 f0       	breq	.+30     	; 0x68c <__fp_splitA+0x2a>
 66e:	87 95       	ror	r24
 670:	08 95       	ret
 672:	12 16       	cp	r1, r18
 674:	13 06       	cpc	r1, r19
 676:	14 06       	cpc	r1, r20
 678:	55 1f       	adc	r21, r21
 67a:	f2 cf       	rjmp	.-28     	; 0x660 <__fp_split3+0xe>
 67c:	46 95       	lsr	r20
 67e:	f1 df       	rcall	.-30     	; 0x662 <__fp_splitA>
 680:	08 c0       	rjmp	.+16     	; 0x692 <__fp_splitA+0x30>
 682:	16 16       	cp	r1, r22
 684:	17 06       	cpc	r1, r23
 686:	18 06       	cpc	r1, r24
 688:	99 1f       	adc	r25, r25
 68a:	f1 cf       	rjmp	.-30     	; 0x66e <__fp_splitA+0xc>
 68c:	86 95       	lsr	r24
 68e:	71 05       	cpc	r23, r1
 690:	61 05       	cpc	r22, r1
 692:	08 94       	sec
 694:	08 95       	ret

00000696 <__fp_zero>:
 696:	e8 94       	clt

00000698 <__fp_szero>:
 698:	bb 27       	eor	r27, r27
 69a:	66 27       	eor	r22, r22
 69c:	77 27       	eor	r23, r23
 69e:	cb 01       	movw	r24, r22
 6a0:	97 f9       	bld	r25, 7
 6a2:	08 95       	ret

000006a4 <__mulsf3>:
 6a4:	0e 94 65 03 	call	0x6ca	; 0x6ca <__mulsf3x>
 6a8:	0c 94 18 03 	jmp	0x630	; 0x630 <__fp_round>
 6ac:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscA>
 6b0:	38 f0       	brcs	.+14     	; 0x6c0 <__mulsf3+0x1c>
 6b2:	0e 94 11 03 	call	0x622	; 0x622 <__fp_pscB>
 6b6:	20 f0       	brcs	.+8      	; 0x6c0 <__mulsf3+0x1c>
 6b8:	95 23       	and	r25, r21
 6ba:	11 f0       	breq	.+4      	; 0x6c0 <__mulsf3+0x1c>
 6bc:	0c 94 01 03 	jmp	0x602	; 0x602 <__fp_inf>
 6c0:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_nan>
 6c4:	11 24       	eor	r1, r1
 6c6:	0c 94 4c 03 	jmp	0x698	; 0x698 <__fp_szero>

000006ca <__mulsf3x>:
 6ca:	0e 94 29 03 	call	0x652	; 0x652 <__fp_split3>
 6ce:	70 f3       	brcs	.-36     	; 0x6ac <__mulsf3+0x8>

000006d0 <__mulsf3_pse>:
 6d0:	95 9f       	mul	r25, r21
 6d2:	c1 f3       	breq	.-16     	; 0x6c4 <__mulsf3+0x20>
 6d4:	95 0f       	add	r25, r21
 6d6:	50 e0       	ldi	r21, 0x00	; 0
 6d8:	55 1f       	adc	r21, r21
 6da:	62 9f       	mul	r22, r18
 6dc:	f0 01       	movw	r30, r0
 6de:	72 9f       	mul	r23, r18
 6e0:	bb 27       	eor	r27, r27
 6e2:	f0 0d       	add	r31, r0
 6e4:	b1 1d       	adc	r27, r1
 6e6:	63 9f       	mul	r22, r19
 6e8:	aa 27       	eor	r26, r26
 6ea:	f0 0d       	add	r31, r0
 6ec:	b1 1d       	adc	r27, r1
 6ee:	aa 1f       	adc	r26, r26
 6f0:	64 9f       	mul	r22, r20
 6f2:	66 27       	eor	r22, r22
 6f4:	b0 0d       	add	r27, r0
 6f6:	a1 1d       	adc	r26, r1
 6f8:	66 1f       	adc	r22, r22
 6fa:	82 9f       	mul	r24, r18
 6fc:	22 27       	eor	r18, r18
 6fe:	b0 0d       	add	r27, r0
 700:	a1 1d       	adc	r26, r1
 702:	62 1f       	adc	r22, r18
 704:	73 9f       	mul	r23, r19
 706:	b0 0d       	add	r27, r0
 708:	a1 1d       	adc	r26, r1
 70a:	62 1f       	adc	r22, r18
 70c:	83 9f       	mul	r24, r19
 70e:	a0 0d       	add	r26, r0
 710:	61 1d       	adc	r22, r1
 712:	22 1f       	adc	r18, r18
 714:	74 9f       	mul	r23, r20
 716:	33 27       	eor	r19, r19
 718:	a0 0d       	add	r26, r0
 71a:	61 1d       	adc	r22, r1
 71c:	23 1f       	adc	r18, r19
 71e:	84 9f       	mul	r24, r20
 720:	60 0d       	add	r22, r0
 722:	21 1d       	adc	r18, r1
 724:	82 2f       	mov	r24, r18
 726:	76 2f       	mov	r23, r22
 728:	6a 2f       	mov	r22, r26
 72a:	11 24       	eor	r1, r1
 72c:	9f 57       	subi	r25, 0x7F	; 127
 72e:	50 40       	sbci	r21, 0x00	; 0
 730:	9a f0       	brmi	.+38     	; 0x758 <__mulsf3_pse+0x88>
 732:	f1 f0       	breq	.+60     	; 0x770 <__mulsf3_pse+0xa0>
 734:	88 23       	and	r24, r24
 736:	4a f0       	brmi	.+18     	; 0x74a <__mulsf3_pse+0x7a>
 738:	ee 0f       	add	r30, r30
 73a:	ff 1f       	adc	r31, r31
 73c:	bb 1f       	adc	r27, r27
 73e:	66 1f       	adc	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	91 50       	subi	r25, 0x01	; 1
 746:	50 40       	sbci	r21, 0x00	; 0
 748:	a9 f7       	brne	.-22     	; 0x734 <__mulsf3_pse+0x64>
 74a:	9e 3f       	cpi	r25, 0xFE	; 254
 74c:	51 05       	cpc	r21, r1
 74e:	80 f0       	brcs	.+32     	; 0x770 <__mulsf3_pse+0xa0>
 750:	0c 94 01 03 	jmp	0x602	; 0x602 <__fp_inf>
 754:	0c 94 4c 03 	jmp	0x698	; 0x698 <__fp_szero>
 758:	5f 3f       	cpi	r21, 0xFF	; 255
 75a:	e4 f3       	brlt	.-8      	; 0x754 <__mulsf3_pse+0x84>
 75c:	98 3e       	cpi	r25, 0xE8	; 232
 75e:	d4 f3       	brlt	.-12     	; 0x754 <__mulsf3_pse+0x84>
 760:	86 95       	lsr	r24
 762:	77 95       	ror	r23
 764:	67 95       	ror	r22
 766:	b7 95       	ror	r27
 768:	f7 95       	ror	r31
 76a:	e7 95       	ror	r30
 76c:	9f 5f       	subi	r25, 0xFF	; 255
 76e:	c1 f7       	brne	.-16     	; 0x760 <__mulsf3_pse+0x90>
 770:	fe 2b       	or	r31, r30
 772:	88 0f       	add	r24, r24
 774:	91 1d       	adc	r25, r1
 776:	96 95       	lsr	r25
 778:	87 95       	ror	r24
 77a:	97 f9       	bld	r25, 7
 77c:	08 95       	ret

0000077e <sprintf>:
 77e:	ae e0       	ldi	r26, 0x0E	; 14
 780:	b0 e0       	ldi	r27, 0x00	; 0
 782:	e5 ec       	ldi	r30, 0xC5	; 197
 784:	f3 e0       	ldi	r31, 0x03	; 3
 786:	0c 94 6e 06 	jmp	0xcdc	; 0xcdc <__prologue_saves__+0x1c>
 78a:	0d 89       	ldd	r16, Y+21	; 0x15
 78c:	1e 89       	ldd	r17, Y+22	; 0x16
 78e:	86 e0       	ldi	r24, 0x06	; 6
 790:	8c 83       	std	Y+4, r24	; 0x04
 792:	1a 83       	std	Y+2, r17	; 0x02
 794:	09 83       	std	Y+1, r16	; 0x01
 796:	8f ef       	ldi	r24, 0xFF	; 255
 798:	9f e7       	ldi	r25, 0x7F	; 127
 79a:	9e 83       	std	Y+6, r25	; 0x06
 79c:	8d 83       	std	Y+5, r24	; 0x05
 79e:	ae 01       	movw	r20, r28
 7a0:	47 5e       	subi	r20, 0xE7	; 231
 7a2:	5f 4f       	sbci	r21, 0xFF	; 255
 7a4:	6f 89       	ldd	r22, Y+23	; 0x17
 7a6:	78 8d       	ldd	r23, Y+24	; 0x18
 7a8:	ce 01       	movw	r24, r28
 7aa:	01 96       	adiw	r24, 0x01	; 1
 7ac:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <vfprintf>
 7b0:	2f 81       	ldd	r18, Y+7	; 0x07
 7b2:	38 85       	ldd	r19, Y+8	; 0x08
 7b4:	f8 01       	movw	r30, r16
 7b6:	e2 0f       	add	r30, r18
 7b8:	f3 1f       	adc	r31, r19
 7ba:	10 82       	st	Z, r1
 7bc:	2e 96       	adiw	r28, 0x0e	; 14
 7be:	e4 e0       	ldi	r30, 0x04	; 4
 7c0:	0c 94 8a 06 	jmp	0xd14	; 0xd14 <__epilogue_restores__+0x1c>

000007c4 <vfprintf>:
 7c4:	ac e0       	ldi	r26, 0x0C	; 12
 7c6:	b0 e0       	ldi	r27, 0x00	; 0
 7c8:	e8 ee       	ldi	r30, 0xE8	; 232
 7ca:	f3 e0       	ldi	r31, 0x03	; 3
 7cc:	0c 94 60 06 	jmp	0xcc0	; 0xcc0 <__prologue_saves__>
 7d0:	7c 01       	movw	r14, r24
 7d2:	6b 01       	movw	r12, r22
 7d4:	8a 01       	movw	r16, r20
 7d6:	fc 01       	movw	r30, r24
 7d8:	17 82       	std	Z+7, r1	; 0x07
 7da:	16 82       	std	Z+6, r1	; 0x06
 7dc:	83 81       	ldd	r24, Z+3	; 0x03
 7de:	81 ff       	sbrs	r24, 1
 7e0:	bd c1       	rjmp	.+890    	; 0xb5c <__stack+0x25d>
 7e2:	ce 01       	movw	r24, r28
 7e4:	01 96       	adiw	r24, 0x01	; 1
 7e6:	4c 01       	movw	r8, r24
 7e8:	f7 01       	movw	r30, r14
 7ea:	93 81       	ldd	r25, Z+3	; 0x03
 7ec:	f6 01       	movw	r30, r12
 7ee:	93 fd       	sbrc	r25, 3
 7f0:	85 91       	lpm	r24, Z+
 7f2:	93 ff       	sbrs	r25, 3
 7f4:	81 91       	ld	r24, Z+
 7f6:	6f 01       	movw	r12, r30
 7f8:	88 23       	and	r24, r24
 7fa:	09 f4       	brne	.+2      	; 0x7fe <vfprintf+0x3a>
 7fc:	ab c1       	rjmp	.+854    	; 0xb54 <__stack+0x255>
 7fe:	85 32       	cpi	r24, 0x25	; 37
 800:	39 f4       	brne	.+14     	; 0x810 <vfprintf+0x4c>
 802:	93 fd       	sbrc	r25, 3
 804:	85 91       	lpm	r24, Z+
 806:	93 ff       	sbrs	r25, 3
 808:	81 91       	ld	r24, Z+
 80a:	6f 01       	movw	r12, r30
 80c:	85 32       	cpi	r24, 0x25	; 37
 80e:	29 f4       	brne	.+10     	; 0x81a <vfprintf+0x56>
 810:	b7 01       	movw	r22, r14
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 818:	e7 cf       	rjmp	.-50     	; 0x7e8 <vfprintf+0x24>
 81a:	51 2c       	mov	r5, r1
 81c:	31 2c       	mov	r3, r1
 81e:	20 e0       	ldi	r18, 0x00	; 0
 820:	20 32       	cpi	r18, 0x20	; 32
 822:	a0 f4       	brcc	.+40     	; 0x84c <vfprintf+0x88>
 824:	8b 32       	cpi	r24, 0x2B	; 43
 826:	69 f0       	breq	.+26     	; 0x842 <vfprintf+0x7e>
 828:	30 f4       	brcc	.+12     	; 0x836 <vfprintf+0x72>
 82a:	80 32       	cpi	r24, 0x20	; 32
 82c:	59 f0       	breq	.+22     	; 0x844 <vfprintf+0x80>
 82e:	83 32       	cpi	r24, 0x23	; 35
 830:	69 f4       	brne	.+26     	; 0x84c <vfprintf+0x88>
 832:	20 61       	ori	r18, 0x10	; 16
 834:	2c c0       	rjmp	.+88     	; 0x88e <vfprintf+0xca>
 836:	8d 32       	cpi	r24, 0x2D	; 45
 838:	39 f0       	breq	.+14     	; 0x848 <vfprintf+0x84>
 83a:	80 33       	cpi	r24, 0x30	; 48
 83c:	39 f4       	brne	.+14     	; 0x84c <vfprintf+0x88>
 83e:	21 60       	ori	r18, 0x01	; 1
 840:	26 c0       	rjmp	.+76     	; 0x88e <vfprintf+0xca>
 842:	22 60       	ori	r18, 0x02	; 2
 844:	24 60       	ori	r18, 0x04	; 4
 846:	23 c0       	rjmp	.+70     	; 0x88e <vfprintf+0xca>
 848:	28 60       	ori	r18, 0x08	; 8
 84a:	21 c0       	rjmp	.+66     	; 0x88e <vfprintf+0xca>
 84c:	27 fd       	sbrc	r18, 7
 84e:	27 c0       	rjmp	.+78     	; 0x89e <vfprintf+0xda>
 850:	30 ed       	ldi	r19, 0xD0	; 208
 852:	38 0f       	add	r19, r24
 854:	3a 30       	cpi	r19, 0x0A	; 10
 856:	78 f4       	brcc	.+30     	; 0x876 <vfprintf+0xb2>
 858:	26 ff       	sbrs	r18, 6
 85a:	06 c0       	rjmp	.+12     	; 0x868 <vfprintf+0xa4>
 85c:	fa e0       	ldi	r31, 0x0A	; 10
 85e:	5f 9e       	mul	r5, r31
 860:	30 0d       	add	r19, r0
 862:	11 24       	eor	r1, r1
 864:	53 2e       	mov	r5, r19
 866:	13 c0       	rjmp	.+38     	; 0x88e <vfprintf+0xca>
 868:	8a e0       	ldi	r24, 0x0A	; 10
 86a:	38 9e       	mul	r3, r24
 86c:	30 0d       	add	r19, r0
 86e:	11 24       	eor	r1, r1
 870:	33 2e       	mov	r3, r19
 872:	20 62       	ori	r18, 0x20	; 32
 874:	0c c0       	rjmp	.+24     	; 0x88e <vfprintf+0xca>
 876:	8e 32       	cpi	r24, 0x2E	; 46
 878:	21 f4       	brne	.+8      	; 0x882 <vfprintf+0xbe>
 87a:	26 fd       	sbrc	r18, 6
 87c:	6b c1       	rjmp	.+726    	; 0xb54 <__stack+0x255>
 87e:	20 64       	ori	r18, 0x40	; 64
 880:	06 c0       	rjmp	.+12     	; 0x88e <vfprintf+0xca>
 882:	8c 36       	cpi	r24, 0x6C	; 108
 884:	11 f4       	brne	.+4      	; 0x88a <vfprintf+0xc6>
 886:	20 68       	ori	r18, 0x80	; 128
 888:	02 c0       	rjmp	.+4      	; 0x88e <vfprintf+0xca>
 88a:	88 36       	cpi	r24, 0x68	; 104
 88c:	41 f4       	brne	.+16     	; 0x89e <vfprintf+0xda>
 88e:	f6 01       	movw	r30, r12
 890:	93 fd       	sbrc	r25, 3
 892:	85 91       	lpm	r24, Z+
 894:	93 ff       	sbrs	r25, 3
 896:	81 91       	ld	r24, Z+
 898:	6f 01       	movw	r12, r30
 89a:	81 11       	cpse	r24, r1
 89c:	c1 cf       	rjmp	.-126    	; 0x820 <vfprintf+0x5c>
 89e:	98 2f       	mov	r25, r24
 8a0:	9f 7d       	andi	r25, 0xDF	; 223
 8a2:	95 54       	subi	r25, 0x45	; 69
 8a4:	93 30       	cpi	r25, 0x03	; 3
 8a6:	28 f4       	brcc	.+10     	; 0x8b2 <vfprintf+0xee>
 8a8:	0c 5f       	subi	r16, 0xFC	; 252
 8aa:	1f 4f       	sbci	r17, 0xFF	; 255
 8ac:	ff e3       	ldi	r31, 0x3F	; 63
 8ae:	f9 83       	std	Y+1, r31	; 0x01
 8b0:	0d c0       	rjmp	.+26     	; 0x8cc <vfprintf+0x108>
 8b2:	83 36       	cpi	r24, 0x63	; 99
 8b4:	31 f0       	breq	.+12     	; 0x8c2 <vfprintf+0xfe>
 8b6:	83 37       	cpi	r24, 0x73	; 115
 8b8:	71 f0       	breq	.+28     	; 0x8d6 <vfprintf+0x112>
 8ba:	83 35       	cpi	r24, 0x53	; 83
 8bc:	09 f0       	breq	.+2      	; 0x8c0 <vfprintf+0xfc>
 8be:	5b c0       	rjmp	.+182    	; 0x976 <__stack+0x77>
 8c0:	22 c0       	rjmp	.+68     	; 0x906 <__stack+0x7>
 8c2:	f8 01       	movw	r30, r16
 8c4:	80 81       	ld	r24, Z
 8c6:	89 83       	std	Y+1, r24	; 0x01
 8c8:	0e 5f       	subi	r16, 0xFE	; 254
 8ca:	1f 4f       	sbci	r17, 0xFF	; 255
 8cc:	44 24       	eor	r4, r4
 8ce:	43 94       	inc	r4
 8d0:	51 2c       	mov	r5, r1
 8d2:	54 01       	movw	r10, r8
 8d4:	15 c0       	rjmp	.+42     	; 0x900 <__stack+0x1>
 8d6:	38 01       	movw	r6, r16
 8d8:	f2 e0       	ldi	r31, 0x02	; 2
 8da:	6f 0e       	add	r6, r31
 8dc:	71 1c       	adc	r7, r1
 8de:	f8 01       	movw	r30, r16
 8e0:	a0 80       	ld	r10, Z
 8e2:	b1 80       	ldd	r11, Z+1	; 0x01
 8e4:	26 ff       	sbrs	r18, 6
 8e6:	03 c0       	rjmp	.+6      	; 0x8ee <vfprintf+0x12a>
 8e8:	65 2d       	mov	r22, r5
 8ea:	70 e0       	ldi	r23, 0x00	; 0
 8ec:	02 c0       	rjmp	.+4      	; 0x8f2 <vfprintf+0x12e>
 8ee:	6f ef       	ldi	r22, 0xFF	; 255
 8f0:	7f ef       	ldi	r23, 0xFF	; 255
 8f2:	c5 01       	movw	r24, r10
 8f4:	2c 87       	std	Y+12, r18	; 0x0c
 8f6:	0e 94 bf 05 	call	0xb7e	; 0xb7e <strnlen>
 8fa:	2c 01       	movw	r4, r24
 8fc:	83 01       	movw	r16, r6
 8fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 900:	2f 77       	andi	r18, 0x7F	; 127
 902:	22 2e       	mov	r2, r18
 904:	17 c0       	rjmp	.+46     	; 0x934 <__stack+0x35>
 906:	38 01       	movw	r6, r16
 908:	f2 e0       	ldi	r31, 0x02	; 2
 90a:	6f 0e       	add	r6, r31
 90c:	71 1c       	adc	r7, r1
 90e:	f8 01       	movw	r30, r16
 910:	a0 80       	ld	r10, Z
 912:	b1 80       	ldd	r11, Z+1	; 0x01
 914:	26 ff       	sbrs	r18, 6
 916:	03 c0       	rjmp	.+6      	; 0x91e <__stack+0x1f>
 918:	65 2d       	mov	r22, r5
 91a:	70 e0       	ldi	r23, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
 91e:	6f ef       	ldi	r22, 0xFF	; 255
 920:	7f ef       	ldi	r23, 0xFF	; 255
 922:	c5 01       	movw	r24, r10
 924:	2c 87       	std	Y+12, r18	; 0x0c
 926:	0e 94 b4 05 	call	0xb68	; 0xb68 <strnlen_P>
 92a:	2c 01       	movw	r4, r24
 92c:	2c 85       	ldd	r18, Y+12	; 0x0c
 92e:	20 68       	ori	r18, 0x80	; 128
 930:	22 2e       	mov	r2, r18
 932:	83 01       	movw	r16, r6
 934:	23 fc       	sbrc	r2, 3
 936:	1b c0       	rjmp	.+54     	; 0x96e <__stack+0x6f>
 938:	83 2d       	mov	r24, r3
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	48 16       	cp	r4, r24
 93e:	59 06       	cpc	r5, r25
 940:	b0 f4       	brcc	.+44     	; 0x96e <__stack+0x6f>
 942:	b7 01       	movw	r22, r14
 944:	80 e2       	ldi	r24, 0x20	; 32
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 94c:	3a 94       	dec	r3
 94e:	f4 cf       	rjmp	.-24     	; 0x938 <__stack+0x39>
 950:	f5 01       	movw	r30, r10
 952:	27 fc       	sbrc	r2, 7
 954:	85 91       	lpm	r24, Z+
 956:	27 fe       	sbrs	r2, 7
 958:	81 91       	ld	r24, Z+
 95a:	5f 01       	movw	r10, r30
 95c:	b7 01       	movw	r22, r14
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 964:	31 10       	cpse	r3, r1
 966:	3a 94       	dec	r3
 968:	f1 e0       	ldi	r31, 0x01	; 1
 96a:	4f 1a       	sub	r4, r31
 96c:	51 08       	sbc	r5, r1
 96e:	41 14       	cp	r4, r1
 970:	51 04       	cpc	r5, r1
 972:	71 f7       	brne	.-36     	; 0x950 <__stack+0x51>
 974:	e5 c0       	rjmp	.+458    	; 0xb40 <__stack+0x241>
 976:	84 36       	cpi	r24, 0x64	; 100
 978:	11 f0       	breq	.+4      	; 0x97e <__stack+0x7f>
 97a:	89 36       	cpi	r24, 0x69	; 105
 97c:	39 f5       	brne	.+78     	; 0x9cc <__stack+0xcd>
 97e:	f8 01       	movw	r30, r16
 980:	27 ff       	sbrs	r18, 7
 982:	07 c0       	rjmp	.+14     	; 0x992 <__stack+0x93>
 984:	60 81       	ld	r22, Z
 986:	71 81       	ldd	r23, Z+1	; 0x01
 988:	82 81       	ldd	r24, Z+2	; 0x02
 98a:	93 81       	ldd	r25, Z+3	; 0x03
 98c:	0c 5f       	subi	r16, 0xFC	; 252
 98e:	1f 4f       	sbci	r17, 0xFF	; 255
 990:	08 c0       	rjmp	.+16     	; 0x9a2 <__stack+0xa3>
 992:	60 81       	ld	r22, Z
 994:	71 81       	ldd	r23, Z+1	; 0x01
 996:	07 2e       	mov	r0, r23
 998:	00 0c       	add	r0, r0
 99a:	88 0b       	sbc	r24, r24
 99c:	99 0b       	sbc	r25, r25
 99e:	0e 5f       	subi	r16, 0xFE	; 254
 9a0:	1f 4f       	sbci	r17, 0xFF	; 255
 9a2:	2f 76       	andi	r18, 0x6F	; 111
 9a4:	72 2e       	mov	r7, r18
 9a6:	97 ff       	sbrs	r25, 7
 9a8:	09 c0       	rjmp	.+18     	; 0x9bc <__stack+0xbd>
 9aa:	90 95       	com	r25
 9ac:	80 95       	com	r24
 9ae:	70 95       	com	r23
 9b0:	61 95       	neg	r22
 9b2:	7f 4f       	sbci	r23, 0xFF	; 255
 9b4:	8f 4f       	sbci	r24, 0xFF	; 255
 9b6:	9f 4f       	sbci	r25, 0xFF	; 255
 9b8:	20 68       	ori	r18, 0x80	; 128
 9ba:	72 2e       	mov	r7, r18
 9bc:	2a e0       	ldi	r18, 0x0A	; 10
 9be:	30 e0       	ldi	r19, 0x00	; 0
 9c0:	a4 01       	movw	r20, r8
 9c2:	0e 94 02 06 	call	0xc04	; 0xc04 <__ultoa_invert>
 9c6:	a8 2e       	mov	r10, r24
 9c8:	a8 18       	sub	r10, r8
 9ca:	44 c0       	rjmp	.+136    	; 0xa54 <__stack+0x155>
 9cc:	85 37       	cpi	r24, 0x75	; 117
 9ce:	29 f4       	brne	.+10     	; 0x9da <__stack+0xdb>
 9d0:	2f 7e       	andi	r18, 0xEF	; 239
 9d2:	b2 2e       	mov	r11, r18
 9d4:	2a e0       	ldi	r18, 0x0A	; 10
 9d6:	30 e0       	ldi	r19, 0x00	; 0
 9d8:	25 c0       	rjmp	.+74     	; 0xa24 <__stack+0x125>
 9da:	f2 2f       	mov	r31, r18
 9dc:	f9 7f       	andi	r31, 0xF9	; 249
 9de:	bf 2e       	mov	r11, r31
 9e0:	8f 36       	cpi	r24, 0x6F	; 111
 9e2:	c1 f0       	breq	.+48     	; 0xa14 <__stack+0x115>
 9e4:	18 f4       	brcc	.+6      	; 0x9ec <__stack+0xed>
 9e6:	88 35       	cpi	r24, 0x58	; 88
 9e8:	79 f0       	breq	.+30     	; 0xa08 <__stack+0x109>
 9ea:	b4 c0       	rjmp	.+360    	; 0xb54 <__stack+0x255>
 9ec:	80 37       	cpi	r24, 0x70	; 112
 9ee:	19 f0       	breq	.+6      	; 0x9f6 <__stack+0xf7>
 9f0:	88 37       	cpi	r24, 0x78	; 120
 9f2:	21 f0       	breq	.+8      	; 0x9fc <__stack+0xfd>
 9f4:	af c0       	rjmp	.+350    	; 0xb54 <__stack+0x255>
 9f6:	2f 2f       	mov	r18, r31
 9f8:	20 61       	ori	r18, 0x10	; 16
 9fa:	b2 2e       	mov	r11, r18
 9fc:	b4 fe       	sbrs	r11, 4
 9fe:	0d c0       	rjmp	.+26     	; 0xa1a <__stack+0x11b>
 a00:	8b 2d       	mov	r24, r11
 a02:	84 60       	ori	r24, 0x04	; 4
 a04:	b8 2e       	mov	r11, r24
 a06:	09 c0       	rjmp	.+18     	; 0xa1a <__stack+0x11b>
 a08:	24 ff       	sbrs	r18, 4
 a0a:	0a c0       	rjmp	.+20     	; 0xa20 <__stack+0x121>
 a0c:	9f 2f       	mov	r25, r31
 a0e:	96 60       	ori	r25, 0x06	; 6
 a10:	b9 2e       	mov	r11, r25
 a12:	06 c0       	rjmp	.+12     	; 0xa20 <__stack+0x121>
 a14:	28 e0       	ldi	r18, 0x08	; 8
 a16:	30 e0       	ldi	r19, 0x00	; 0
 a18:	05 c0       	rjmp	.+10     	; 0xa24 <__stack+0x125>
 a1a:	20 e1       	ldi	r18, 0x10	; 16
 a1c:	30 e0       	ldi	r19, 0x00	; 0
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <__stack+0x125>
 a20:	20 e1       	ldi	r18, 0x10	; 16
 a22:	32 e0       	ldi	r19, 0x02	; 2
 a24:	f8 01       	movw	r30, r16
 a26:	b7 fe       	sbrs	r11, 7
 a28:	07 c0       	rjmp	.+14     	; 0xa38 <__stack+0x139>
 a2a:	60 81       	ld	r22, Z
 a2c:	71 81       	ldd	r23, Z+1	; 0x01
 a2e:	82 81       	ldd	r24, Z+2	; 0x02
 a30:	93 81       	ldd	r25, Z+3	; 0x03
 a32:	0c 5f       	subi	r16, 0xFC	; 252
 a34:	1f 4f       	sbci	r17, 0xFF	; 255
 a36:	06 c0       	rjmp	.+12     	; 0xa44 <__stack+0x145>
 a38:	60 81       	ld	r22, Z
 a3a:	71 81       	ldd	r23, Z+1	; 0x01
 a3c:	80 e0       	ldi	r24, 0x00	; 0
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	0e 5f       	subi	r16, 0xFE	; 254
 a42:	1f 4f       	sbci	r17, 0xFF	; 255
 a44:	a4 01       	movw	r20, r8
 a46:	0e 94 02 06 	call	0xc04	; 0xc04 <__ultoa_invert>
 a4a:	a8 2e       	mov	r10, r24
 a4c:	a8 18       	sub	r10, r8
 a4e:	fb 2d       	mov	r31, r11
 a50:	ff 77       	andi	r31, 0x7F	; 127
 a52:	7f 2e       	mov	r7, r31
 a54:	76 fe       	sbrs	r7, 6
 a56:	0b c0       	rjmp	.+22     	; 0xa6e <__stack+0x16f>
 a58:	37 2d       	mov	r19, r7
 a5a:	3e 7f       	andi	r19, 0xFE	; 254
 a5c:	a5 14       	cp	r10, r5
 a5e:	50 f4       	brcc	.+20     	; 0xa74 <__stack+0x175>
 a60:	74 fe       	sbrs	r7, 4
 a62:	0a c0       	rjmp	.+20     	; 0xa78 <__stack+0x179>
 a64:	72 fc       	sbrc	r7, 2
 a66:	08 c0       	rjmp	.+16     	; 0xa78 <__stack+0x179>
 a68:	37 2d       	mov	r19, r7
 a6a:	3e 7e       	andi	r19, 0xEE	; 238
 a6c:	05 c0       	rjmp	.+10     	; 0xa78 <__stack+0x179>
 a6e:	ba 2c       	mov	r11, r10
 a70:	37 2d       	mov	r19, r7
 a72:	03 c0       	rjmp	.+6      	; 0xa7a <__stack+0x17b>
 a74:	ba 2c       	mov	r11, r10
 a76:	01 c0       	rjmp	.+2      	; 0xa7a <__stack+0x17b>
 a78:	b5 2c       	mov	r11, r5
 a7a:	34 ff       	sbrs	r19, 4
 a7c:	0d c0       	rjmp	.+26     	; 0xa98 <__stack+0x199>
 a7e:	fe 01       	movw	r30, r28
 a80:	ea 0d       	add	r30, r10
 a82:	f1 1d       	adc	r31, r1
 a84:	80 81       	ld	r24, Z
 a86:	80 33       	cpi	r24, 0x30	; 48
 a88:	11 f4       	brne	.+4      	; 0xa8e <__stack+0x18f>
 a8a:	39 7e       	andi	r19, 0xE9	; 233
 a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <__stack+0x1a1>
 a8e:	32 ff       	sbrs	r19, 2
 a90:	06 c0       	rjmp	.+12     	; 0xa9e <__stack+0x19f>
 a92:	b3 94       	inc	r11
 a94:	b3 94       	inc	r11
 a96:	04 c0       	rjmp	.+8      	; 0xaa0 <__stack+0x1a1>
 a98:	83 2f       	mov	r24, r19
 a9a:	86 78       	andi	r24, 0x86	; 134
 a9c:	09 f0       	breq	.+2      	; 0xaa0 <__stack+0x1a1>
 a9e:	b3 94       	inc	r11
 aa0:	33 fd       	sbrc	r19, 3
 aa2:	13 c0       	rjmp	.+38     	; 0xaca <__stack+0x1cb>
 aa4:	30 ff       	sbrs	r19, 0
 aa6:	06 c0       	rjmp	.+12     	; 0xab4 <__stack+0x1b5>
 aa8:	5a 2c       	mov	r5, r10
 aaa:	b3 14       	cp	r11, r3
 aac:	18 f4       	brcc	.+6      	; 0xab4 <__stack+0x1b5>
 aae:	53 0c       	add	r5, r3
 ab0:	5b 18       	sub	r5, r11
 ab2:	b3 2c       	mov	r11, r3
 ab4:	b3 14       	cp	r11, r3
 ab6:	68 f4       	brcc	.+26     	; 0xad2 <__stack+0x1d3>
 ab8:	b7 01       	movw	r22, r14
 aba:	80 e2       	ldi	r24, 0x20	; 32
 abc:	90 e0       	ldi	r25, 0x00	; 0
 abe:	3c 87       	std	Y+12, r19	; 0x0c
 ac0:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 ac4:	b3 94       	inc	r11
 ac6:	3c 85       	ldd	r19, Y+12	; 0x0c
 ac8:	f5 cf       	rjmp	.-22     	; 0xab4 <__stack+0x1b5>
 aca:	b3 14       	cp	r11, r3
 acc:	10 f4       	brcc	.+4      	; 0xad2 <__stack+0x1d3>
 ace:	3b 18       	sub	r3, r11
 ad0:	01 c0       	rjmp	.+2      	; 0xad4 <__stack+0x1d5>
 ad2:	31 2c       	mov	r3, r1
 ad4:	34 ff       	sbrs	r19, 4
 ad6:	12 c0       	rjmp	.+36     	; 0xafc <__stack+0x1fd>
 ad8:	b7 01       	movw	r22, r14
 ada:	80 e3       	ldi	r24, 0x30	; 48
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	3c 87       	std	Y+12, r19	; 0x0c
 ae0:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 ae4:	3c 85       	ldd	r19, Y+12	; 0x0c
 ae6:	32 ff       	sbrs	r19, 2
 ae8:	17 c0       	rjmp	.+46     	; 0xb18 <__stack+0x219>
 aea:	31 fd       	sbrc	r19, 1
 aec:	03 c0       	rjmp	.+6      	; 0xaf4 <__stack+0x1f5>
 aee:	88 e7       	ldi	r24, 0x78	; 120
 af0:	90 e0       	ldi	r25, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <__stack+0x1f9>
 af4:	88 e5       	ldi	r24, 0x58	; 88
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	b7 01       	movw	r22, r14
 afa:	0c c0       	rjmp	.+24     	; 0xb14 <__stack+0x215>
 afc:	83 2f       	mov	r24, r19
 afe:	86 78       	andi	r24, 0x86	; 134
 b00:	59 f0       	breq	.+22     	; 0xb18 <__stack+0x219>
 b02:	31 ff       	sbrs	r19, 1
 b04:	02 c0       	rjmp	.+4      	; 0xb0a <__stack+0x20b>
 b06:	8b e2       	ldi	r24, 0x2B	; 43
 b08:	01 c0       	rjmp	.+2      	; 0xb0c <__stack+0x20d>
 b0a:	80 e2       	ldi	r24, 0x20	; 32
 b0c:	37 fd       	sbrc	r19, 7
 b0e:	8d e2       	ldi	r24, 0x2D	; 45
 b10:	b7 01       	movw	r22, r14
 b12:	90 e0       	ldi	r25, 0x00	; 0
 b14:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 b18:	a5 14       	cp	r10, r5
 b1a:	38 f4       	brcc	.+14     	; 0xb2a <__stack+0x22b>
 b1c:	b7 01       	movw	r22, r14
 b1e:	80 e3       	ldi	r24, 0x30	; 48
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 b26:	5a 94       	dec	r5
 b28:	f7 cf       	rjmp	.-18     	; 0xb18 <__stack+0x219>
 b2a:	aa 94       	dec	r10
 b2c:	f4 01       	movw	r30, r8
 b2e:	ea 0d       	add	r30, r10
 b30:	f1 1d       	adc	r31, r1
 b32:	80 81       	ld	r24, Z
 b34:	b7 01       	movw	r22, r14
 b36:	90 e0       	ldi	r25, 0x00	; 0
 b38:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 b3c:	a1 10       	cpse	r10, r1
 b3e:	f5 cf       	rjmp	.-22     	; 0xb2a <__stack+0x22b>
 b40:	33 20       	and	r3, r3
 b42:	09 f4       	brne	.+2      	; 0xb46 <__stack+0x247>
 b44:	51 ce       	rjmp	.-862    	; 0x7e8 <vfprintf+0x24>
 b46:	b7 01       	movw	r22, r14
 b48:	80 e2       	ldi	r24, 0x20	; 32
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	0e 94 ca 05 	call	0xb94	; 0xb94 <fputc>
 b50:	3a 94       	dec	r3
 b52:	f6 cf       	rjmp	.-20     	; 0xb40 <__stack+0x241>
 b54:	f7 01       	movw	r30, r14
 b56:	86 81       	ldd	r24, Z+6	; 0x06
 b58:	97 81       	ldd	r25, Z+7	; 0x07
 b5a:	02 c0       	rjmp	.+4      	; 0xb60 <__stack+0x261>
 b5c:	8f ef       	ldi	r24, 0xFF	; 255
 b5e:	9f ef       	ldi	r25, 0xFF	; 255
 b60:	2c 96       	adiw	r28, 0x0c	; 12
 b62:	e2 e1       	ldi	r30, 0x12	; 18
 b64:	0c 94 7c 06 	jmp	0xcf8	; 0xcf8 <__epilogue_restores__>

00000b68 <strnlen_P>:
 b68:	fc 01       	movw	r30, r24
 b6a:	05 90       	lpm	r0, Z+
 b6c:	61 50       	subi	r22, 0x01	; 1
 b6e:	70 40       	sbci	r23, 0x00	; 0
 b70:	01 10       	cpse	r0, r1
 b72:	d8 f7       	brcc	.-10     	; 0xb6a <strnlen_P+0x2>
 b74:	80 95       	com	r24
 b76:	90 95       	com	r25
 b78:	8e 0f       	add	r24, r30
 b7a:	9f 1f       	adc	r25, r31
 b7c:	08 95       	ret

00000b7e <strnlen>:
 b7e:	fc 01       	movw	r30, r24
 b80:	61 50       	subi	r22, 0x01	; 1
 b82:	70 40       	sbci	r23, 0x00	; 0
 b84:	01 90       	ld	r0, Z+
 b86:	01 10       	cpse	r0, r1
 b88:	d8 f7       	brcc	.-10     	; 0xb80 <strnlen+0x2>
 b8a:	80 95       	com	r24
 b8c:	90 95       	com	r25
 b8e:	8e 0f       	add	r24, r30
 b90:	9f 1f       	adc	r25, r31
 b92:	08 95       	ret

00000b94 <fputc>:
 b94:	0f 93       	push	r16
 b96:	1f 93       	push	r17
 b98:	cf 93       	push	r28
 b9a:	df 93       	push	r29
 b9c:	fb 01       	movw	r30, r22
 b9e:	23 81       	ldd	r18, Z+3	; 0x03
 ba0:	21 fd       	sbrc	r18, 1
 ba2:	03 c0       	rjmp	.+6      	; 0xbaa <fputc+0x16>
 ba4:	8f ef       	ldi	r24, 0xFF	; 255
 ba6:	9f ef       	ldi	r25, 0xFF	; 255
 ba8:	28 c0       	rjmp	.+80     	; 0xbfa <fputc+0x66>
 baa:	22 ff       	sbrs	r18, 2
 bac:	16 c0       	rjmp	.+44     	; 0xbda <fputc+0x46>
 bae:	46 81       	ldd	r20, Z+6	; 0x06
 bb0:	57 81       	ldd	r21, Z+7	; 0x07
 bb2:	24 81       	ldd	r18, Z+4	; 0x04
 bb4:	35 81       	ldd	r19, Z+5	; 0x05
 bb6:	42 17       	cp	r20, r18
 bb8:	53 07       	cpc	r21, r19
 bba:	44 f4       	brge	.+16     	; 0xbcc <fputc+0x38>
 bbc:	a0 81       	ld	r26, Z
 bbe:	b1 81       	ldd	r27, Z+1	; 0x01
 bc0:	9d 01       	movw	r18, r26
 bc2:	2f 5f       	subi	r18, 0xFF	; 255
 bc4:	3f 4f       	sbci	r19, 0xFF	; 255
 bc6:	31 83       	std	Z+1, r19	; 0x01
 bc8:	20 83       	st	Z, r18
 bca:	8c 93       	st	X, r24
 bcc:	26 81       	ldd	r18, Z+6	; 0x06
 bce:	37 81       	ldd	r19, Z+7	; 0x07
 bd0:	2f 5f       	subi	r18, 0xFF	; 255
 bd2:	3f 4f       	sbci	r19, 0xFF	; 255
 bd4:	37 83       	std	Z+7, r19	; 0x07
 bd6:	26 83       	std	Z+6, r18	; 0x06
 bd8:	10 c0       	rjmp	.+32     	; 0xbfa <fputc+0x66>
 bda:	eb 01       	movw	r28, r22
 bdc:	09 2f       	mov	r16, r25
 bde:	18 2f       	mov	r17, r24
 be0:	00 84       	ldd	r0, Z+8	; 0x08
 be2:	f1 85       	ldd	r31, Z+9	; 0x09
 be4:	e0 2d       	mov	r30, r0
 be6:	09 95       	icall
 be8:	89 2b       	or	r24, r25
 bea:	e1 f6       	brne	.-72     	; 0xba4 <fputc+0x10>
 bec:	8e 81       	ldd	r24, Y+6	; 0x06
 bee:	9f 81       	ldd	r25, Y+7	; 0x07
 bf0:	01 96       	adiw	r24, 0x01	; 1
 bf2:	9f 83       	std	Y+7, r25	; 0x07
 bf4:	8e 83       	std	Y+6, r24	; 0x06
 bf6:	81 2f       	mov	r24, r17
 bf8:	90 2f       	mov	r25, r16
 bfa:	df 91       	pop	r29
 bfc:	cf 91       	pop	r28
 bfe:	1f 91       	pop	r17
 c00:	0f 91       	pop	r16
 c02:	08 95       	ret

00000c04 <__ultoa_invert>:
 c04:	fa 01       	movw	r30, r20
 c06:	aa 27       	eor	r26, r26
 c08:	28 30       	cpi	r18, 0x08	; 8
 c0a:	51 f1       	breq	.+84     	; 0xc60 <__ultoa_invert+0x5c>
 c0c:	20 31       	cpi	r18, 0x10	; 16
 c0e:	81 f1       	breq	.+96     	; 0xc70 <__ultoa_invert+0x6c>
 c10:	e8 94       	clt
 c12:	6f 93       	push	r22
 c14:	6e 7f       	andi	r22, 0xFE	; 254
 c16:	6e 5f       	subi	r22, 0xFE	; 254
 c18:	7f 4f       	sbci	r23, 0xFF	; 255
 c1a:	8f 4f       	sbci	r24, 0xFF	; 255
 c1c:	9f 4f       	sbci	r25, 0xFF	; 255
 c1e:	af 4f       	sbci	r26, 0xFF	; 255
 c20:	b1 e0       	ldi	r27, 0x01	; 1
 c22:	3e d0       	rcall	.+124    	; 0xca0 <__ultoa_invert+0x9c>
 c24:	b4 e0       	ldi	r27, 0x04	; 4
 c26:	3c d0       	rcall	.+120    	; 0xca0 <__ultoa_invert+0x9c>
 c28:	67 0f       	add	r22, r23
 c2a:	78 1f       	adc	r23, r24
 c2c:	89 1f       	adc	r24, r25
 c2e:	9a 1f       	adc	r25, r26
 c30:	a1 1d       	adc	r26, r1
 c32:	68 0f       	add	r22, r24
 c34:	79 1f       	adc	r23, r25
 c36:	8a 1f       	adc	r24, r26
 c38:	91 1d       	adc	r25, r1
 c3a:	a1 1d       	adc	r26, r1
 c3c:	6a 0f       	add	r22, r26
 c3e:	71 1d       	adc	r23, r1
 c40:	81 1d       	adc	r24, r1
 c42:	91 1d       	adc	r25, r1
 c44:	a1 1d       	adc	r26, r1
 c46:	20 d0       	rcall	.+64     	; 0xc88 <__ultoa_invert+0x84>
 c48:	09 f4       	brne	.+2      	; 0xc4c <__ultoa_invert+0x48>
 c4a:	68 94       	set
 c4c:	3f 91       	pop	r19
 c4e:	2a e0       	ldi	r18, 0x0A	; 10
 c50:	26 9f       	mul	r18, r22
 c52:	11 24       	eor	r1, r1
 c54:	30 19       	sub	r19, r0
 c56:	30 5d       	subi	r19, 0xD0	; 208
 c58:	31 93       	st	Z+, r19
 c5a:	de f6       	brtc	.-74     	; 0xc12 <__ultoa_invert+0xe>
 c5c:	cf 01       	movw	r24, r30
 c5e:	08 95       	ret
 c60:	46 2f       	mov	r20, r22
 c62:	47 70       	andi	r20, 0x07	; 7
 c64:	40 5d       	subi	r20, 0xD0	; 208
 c66:	41 93       	st	Z+, r20
 c68:	b3 e0       	ldi	r27, 0x03	; 3
 c6a:	0f d0       	rcall	.+30     	; 0xc8a <__ultoa_invert+0x86>
 c6c:	c9 f7       	brne	.-14     	; 0xc60 <__ultoa_invert+0x5c>
 c6e:	f6 cf       	rjmp	.-20     	; 0xc5c <__ultoa_invert+0x58>
 c70:	46 2f       	mov	r20, r22
 c72:	4f 70       	andi	r20, 0x0F	; 15
 c74:	40 5d       	subi	r20, 0xD0	; 208
 c76:	4a 33       	cpi	r20, 0x3A	; 58
 c78:	18 f0       	brcs	.+6      	; 0xc80 <__ultoa_invert+0x7c>
 c7a:	49 5d       	subi	r20, 0xD9	; 217
 c7c:	31 fd       	sbrc	r19, 1
 c7e:	40 52       	subi	r20, 0x20	; 32
 c80:	41 93       	st	Z+, r20
 c82:	02 d0       	rcall	.+4      	; 0xc88 <__ultoa_invert+0x84>
 c84:	a9 f7       	brne	.-22     	; 0xc70 <__ultoa_invert+0x6c>
 c86:	ea cf       	rjmp	.-44     	; 0xc5c <__ultoa_invert+0x58>
 c88:	b4 e0       	ldi	r27, 0x04	; 4
 c8a:	a6 95       	lsr	r26
 c8c:	97 95       	ror	r25
 c8e:	87 95       	ror	r24
 c90:	77 95       	ror	r23
 c92:	67 95       	ror	r22
 c94:	ba 95       	dec	r27
 c96:	c9 f7       	brne	.-14     	; 0xc8a <__ultoa_invert+0x86>
 c98:	00 97       	sbiw	r24, 0x00	; 0
 c9a:	61 05       	cpc	r22, r1
 c9c:	71 05       	cpc	r23, r1
 c9e:	08 95       	ret
 ca0:	9b 01       	movw	r18, r22
 ca2:	ac 01       	movw	r20, r24
 ca4:	0a 2e       	mov	r0, r26
 ca6:	06 94       	lsr	r0
 ca8:	57 95       	ror	r21
 caa:	47 95       	ror	r20
 cac:	37 95       	ror	r19
 cae:	27 95       	ror	r18
 cb0:	ba 95       	dec	r27
 cb2:	c9 f7       	brne	.-14     	; 0xca6 <__ultoa_invert+0xa2>
 cb4:	62 0f       	add	r22, r18
 cb6:	73 1f       	adc	r23, r19
 cb8:	84 1f       	adc	r24, r20
 cba:	95 1f       	adc	r25, r21
 cbc:	a0 1d       	adc	r26, r0
 cbe:	08 95       	ret

00000cc0 <__prologue_saves__>:
 cc0:	2f 92       	push	r2
 cc2:	3f 92       	push	r3
 cc4:	4f 92       	push	r4
 cc6:	5f 92       	push	r5
 cc8:	6f 92       	push	r6
 cca:	7f 92       	push	r7
 ccc:	8f 92       	push	r8
 cce:	9f 92       	push	r9
 cd0:	af 92       	push	r10
 cd2:	bf 92       	push	r11
 cd4:	cf 92       	push	r12
 cd6:	df 92       	push	r13
 cd8:	ef 92       	push	r14
 cda:	ff 92       	push	r15
 cdc:	0f 93       	push	r16
 cde:	1f 93       	push	r17
 ce0:	cf 93       	push	r28
 ce2:	df 93       	push	r29
 ce4:	cd b7       	in	r28, 0x3d	; 61
 ce6:	de b7       	in	r29, 0x3e	; 62
 ce8:	ca 1b       	sub	r28, r26
 cea:	db 0b       	sbc	r29, r27
 cec:	0f b6       	in	r0, 0x3f	; 63
 cee:	f8 94       	cli
 cf0:	de bf       	out	0x3e, r29	; 62
 cf2:	0f be       	out	0x3f, r0	; 63
 cf4:	cd bf       	out	0x3d, r28	; 61
 cf6:	09 94       	ijmp

00000cf8 <__epilogue_restores__>:
 cf8:	2a 88       	ldd	r2, Y+18	; 0x12
 cfa:	39 88       	ldd	r3, Y+17	; 0x11
 cfc:	48 88       	ldd	r4, Y+16	; 0x10
 cfe:	5f 84       	ldd	r5, Y+15	; 0x0f
 d00:	6e 84       	ldd	r6, Y+14	; 0x0e
 d02:	7d 84       	ldd	r7, Y+13	; 0x0d
 d04:	8c 84       	ldd	r8, Y+12	; 0x0c
 d06:	9b 84       	ldd	r9, Y+11	; 0x0b
 d08:	aa 84       	ldd	r10, Y+10	; 0x0a
 d0a:	b9 84       	ldd	r11, Y+9	; 0x09
 d0c:	c8 84       	ldd	r12, Y+8	; 0x08
 d0e:	df 80       	ldd	r13, Y+7	; 0x07
 d10:	ee 80       	ldd	r14, Y+6	; 0x06
 d12:	fd 80       	ldd	r15, Y+5	; 0x05
 d14:	0c 81       	ldd	r16, Y+4	; 0x04
 d16:	1b 81       	ldd	r17, Y+3	; 0x03
 d18:	aa 81       	ldd	r26, Y+2	; 0x02
 d1a:	b9 81       	ldd	r27, Y+1	; 0x01
 d1c:	ce 0f       	add	r28, r30
 d1e:	d1 1d       	adc	r29, r1
 d20:	0f b6       	in	r0, 0x3f	; 63
 d22:	f8 94       	cli
 d24:	de bf       	out	0x3e, r29	; 62
 d26:	0f be       	out	0x3f, r0	; 63
 d28:	cd bf       	out	0x3d, r28	; 61
 d2a:	ed 01       	movw	r28, r26
 d2c:	08 95       	ret

00000d2e <_exit>:
 d2e:	f8 94       	cli

00000d30 <__stop_program>:
 d30:	ff cf       	rjmp	.-2      	; 0xd30 <__stop_program>
